// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: grpc.proto

package protobuf

import (
	fmt "fmt"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for ExampleService service

func NewExampleServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for ExampleService service

type ExampleService interface {
	HelloWorld(ctx context.Context, in *ExampleGrpcReqVO, opts ...client.CallOption) (*ExampleGrpcRspVO, error)
}

type exampleService struct {
	c    client.Client
	name string
}

func NewExampleService(name string, c client.Client) ExampleService {
	return &exampleService{
		c:    c,
		name: name,
	}
}

func (c *exampleService) HelloWorld(ctx context.Context, in *ExampleGrpcReqVO, opts ...client.CallOption) (*ExampleGrpcRspVO, error) {
	req := c.c.NewRequest(c.name, "ExampleService.HelloWorld", in)
	out := new(ExampleGrpcRspVO)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ExampleService service

type ExampleServiceHandler interface {
	HelloWorld(context.Context, *ExampleGrpcReqVO, *ExampleGrpcRspVO) error
}

func RegisterExampleServiceHandler(s server.Server, hdlr ExampleServiceHandler, opts ...server.HandlerOption) error {
	type exampleService interface {
		HelloWorld(ctx context.Context, in *ExampleGrpcReqVO, out *ExampleGrpcRspVO) error
	}
	type ExampleService struct {
		exampleService
	}
	h := &exampleServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&ExampleService{h}, opts...))
}

type exampleServiceHandler struct {
	ExampleServiceHandler
}

func (h *exampleServiceHandler) HelloWorld(ctx context.Context, in *ExampleGrpcReqVO, out *ExampleGrpcRspVO) error {
	return h.ExampleServiceHandler.HelloWorld(ctx, in, out)
}
