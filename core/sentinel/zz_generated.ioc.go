//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package sentinel

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
	"github.com/zhanjunjie2019/clover/global/confs"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &sentinelLoader_{}
		},
	})
	sentinelLoaderStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &SentinelLoader{}
		},
		ConstructFunc: func(i interface{}, _ interface{}) (interface{}, error) {
			impl := i.(*SentinelLoader)
			var constructFunc SentinelLoaderConstructFunc = InitSentinelLoader
			return constructFunc(impl)
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(sentinelLoaderStructDescriptor)
}

type SentinelLoaderConstructFunc func(impl *SentinelLoader) (*SentinelLoader, error)
type sentinelLoader_ struct {
	CleanBufferRules_  func()
	AppendServerRules_ func()
	AppendApiRules_    func(sentinelStrategy string)
	appendRules_       func(resource string, ruleStrategy confs.RuleStrategy)
	LoadSentinelRules_ func() error
}

func (s *sentinelLoader_) CleanBufferRules() {
	s.CleanBufferRules_()
}

func (s *sentinelLoader_) AppendServerRules() {
	s.AppendServerRules_()
}

func (s *sentinelLoader_) AppendApiRules(sentinelStrategy string) {
	s.AppendApiRules_(sentinelStrategy)
}

func (s *sentinelLoader_) appendRules(resource string, ruleStrategy confs.RuleStrategy) {
	s.appendRules_(resource, ruleStrategy)
}

func (s *sentinelLoader_) LoadSentinelRules() error {
	return s.LoadSentinelRules_()
}

type SentinelLoaderIOCInterface interface {
	CleanBufferRules()
	AppendServerRules()
	AppendApiRules(sentinelStrategy string)
	appendRules(resource string, ruleStrategy confs.RuleStrategy)
	LoadSentinelRules() error
}

var _sentinelLoaderSDID string

func GetSentinelLoaderSingleton() (*SentinelLoader, error) {
	if _sentinelLoaderSDID == "" {
		_sentinelLoaderSDID = util.GetSDIDByStructPtr(new(SentinelLoader))
	}
	i, err := singleton.GetImpl(_sentinelLoaderSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*SentinelLoader)
	return impl, nil
}

func GetSentinelLoaderIOCInterfaceSingleton() (SentinelLoaderIOCInterface, error) {
	if _sentinelLoaderSDID == "" {
		_sentinelLoaderSDID = util.GetSDIDByStructPtr(new(SentinelLoader))
	}
	i, err := singleton.GetImplWithProxy(_sentinelLoaderSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(SentinelLoaderIOCInterface)
	return impl, nil
}

type ThisSentinelLoader struct {
}

func (t *ThisSentinelLoader) This() SentinelLoaderIOCInterface {
	thisPtr, _ := GetSentinelLoaderIOCInterfaceSingleton()
	return thisPtr
}
