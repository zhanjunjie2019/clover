//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package controller

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	allimpls "github.com/alibaba/ioc-golang/extension/autowire/allimpls"
	"github.com/gin-gonic/gin"
	"github.com/zhanjunjie2019/clover/global/defs"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &permissionCreateController_{}
		},
	})
	permissionCreateControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &PermissionCreateController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(permissionCreateControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &roleCreateController_{}
		},
	})
	roleCreateControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &RoleCreateController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(roleCreateControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &rolePermissionAssignmentController_{}
		},
	})
	rolePermissionAssignmentControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &RolePermissionAssignmentController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(rolePermissionAssignmentControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &sadminTokenCreateController_{}
		},
	})
	sadminTokenCreateControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &SadminTokenCreateController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(sadminTokenCreateControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &tenantCreateController_{}
		},
	})
	tenantCreateControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &TenantCreateController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(tenantCreateControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &tenantTokenCreateController_{}
		},
	})
	tenantTokenCreateControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &TenantTokenCreateController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(tenantTokenCreateControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &userAuthorizationCodeController_{}
		},
	})
	userAuthorizationCodeControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &UserAuthorizationCodeController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(userAuthorizationCodeControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &userCreateController_{}
		},
	})
	userCreateControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &UserCreateController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(userCreateControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &userRoleAssignmentController_{}
		},
	})
	userRoleAssignmentControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &UserRoleAssignmentController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(userRoleAssignmentControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &userTokenByAuthcodeController_{}
		},
	})
	userTokenByAuthcodeControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &UserTokenByAuthcodeController{}
		},
		Metadata: map[string]interface{}{
			"aop": map[string]interface{}{},
			"autowire": map[string]interface{}{
				"common": map[string]interface{}{
					"implements": []interface{}{
						new(defs.IController),
					},
				},
			},
		},
	}
	allimpls.RegisterStructDescriptor(userTokenByAuthcodeControllerStructDescriptor)
}

type permissionCreateController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (p *permissionCreateController_) GetOption() defs.ControllerOptions {
	return p.GetOption_()
}

func (p *permissionCreateController_) Handle(c *gin.Context) {
	p.Handle_(c)
}

type roleCreateController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (r *roleCreateController_) GetOption() defs.ControllerOptions {
	return r.GetOption_()
}

func (r *roleCreateController_) Handle(c *gin.Context) {
	r.Handle_(c)
}

type rolePermissionAssignmentController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (r *rolePermissionAssignmentController_) GetOption() defs.ControllerOptions {
	return r.GetOption_()
}

func (r *rolePermissionAssignmentController_) Handle(c *gin.Context) {
	r.Handle_(c)
}

type sadminTokenCreateController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (s *sadminTokenCreateController_) GetOption() defs.ControllerOptions {
	return s.GetOption_()
}

func (s *sadminTokenCreateController_) Handle(c *gin.Context) {
	s.Handle_(c)
}

type tenantCreateController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (t *tenantCreateController_) GetOption() defs.ControllerOptions {
	return t.GetOption_()
}

func (t *tenantCreateController_) Handle(c *gin.Context) {
	t.Handle_(c)
}

type tenantTokenCreateController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (t *tenantTokenCreateController_) GetOption() defs.ControllerOptions {
	return t.GetOption_()
}

func (t *tenantTokenCreateController_) Handle(c *gin.Context) {
	t.Handle_(c)
}

type userAuthorizationCodeController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (u *userAuthorizationCodeController_) GetOption() defs.ControllerOptions {
	return u.GetOption_()
}

func (u *userAuthorizationCodeController_) Handle(c *gin.Context) {
	u.Handle_(c)
}

type userCreateController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (u *userCreateController_) GetOption() defs.ControllerOptions {
	return u.GetOption_()
}

func (u *userCreateController_) Handle(c *gin.Context) {
	u.Handle_(c)
}

type userRoleAssignmentController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (u *userRoleAssignmentController_) GetOption() defs.ControllerOptions {
	return u.GetOption_()
}

func (u *userRoleAssignmentController_) Handle(c *gin.Context) {
	u.Handle_(c)
}

type userTokenByAuthcodeController_ struct {
	GetOption_ func() defs.ControllerOptions
	Handle_    func(c *gin.Context)
}

func (u *userTokenByAuthcodeController_) GetOption() defs.ControllerOptions {
	return u.GetOption_()
}

func (u *userTokenByAuthcodeController_) Handle(c *gin.Context) {
	u.Handle_(c)
}

type PermissionCreateControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type RoleCreateControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type RolePermissionAssignmentControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type SadminTokenCreateControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type TenantCreateControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type TenantTokenCreateControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type UserAuthorizationCodeControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type UserCreateControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type UserRoleAssignmentControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

type UserTokenByAuthcodeControllerIOCInterface interface {
	GetOption() defs.ControllerOptions
	Handle(c *gin.Context)
}

var _permissionCreateControllerSDID string
var _roleCreateControllerSDID string
var _rolePermissionAssignmentControllerSDID string
var _sadminTokenCreateControllerSDID string
var _tenantCreateControllerSDID string
var _tenantTokenCreateControllerSDID string
var _userAuthorizationCodeControllerSDID string
var _userCreateControllerSDID string
var _userRoleAssignmentControllerSDID string
var _userTokenByAuthcodeControllerSDID string
