//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package config

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &configDefines_{}
		},
	})
	configDefinesStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &ConfigDefines{}
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(configDefinesStructDescriptor)
}

type configDefines_ struct {
	LoadAllConfigByLocal_  func() error
	LoadAllConfigByConsul_ func() error
}

func (c *configDefines_) LoadAllConfigByLocal() error {
	return c.LoadAllConfigByLocal_()
}

func (c *configDefines_) LoadAllConfigByConsul() error {
	return c.LoadAllConfigByConsul_()
}

type ConfigDefinesIOCInterface interface {
	LoadAllConfigByLocal() error
	LoadAllConfigByConsul() error
}

var _configDefinesSDID string

func GetConfigDefinesSingleton() (*ConfigDefines, error) {
	if _configDefinesSDID == "" {
		_configDefinesSDID = util.GetSDIDByStructPtr(new(ConfigDefines))
	}
	i, err := singleton.GetImpl(_configDefinesSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*ConfigDefines)
	return impl, nil
}

func GetConfigDefinesIOCInterfaceSingleton() (ConfigDefinesIOCInterface, error) {
	if _configDefinesSDID == "" {
		_configDefinesSDID = util.GetSDIDByStructPtr(new(ConfigDefines))
	}
	i, err := singleton.GetImplWithProxy(_configDefinesSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(ConfigDefinesIOCInterface)
	return impl, nil
}

type ThisConfigDefines struct {
}

func (t *ThisConfigDefines) This() ConfigDefinesIOCInterface {
	thisPtr, _ := GetConfigDefinesIOCInterfaceSingleton()
	return thisPtr
}
